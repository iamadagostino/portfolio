/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useEffect, useRef } from 'react';

import { useGLTF, useTexture, useVideoTexture } from '@react-three/drei';
import type { ThreeElements } from '@react-three/fiber';
import { useFrame } from '@react-three/fiber';
import { animate, useMotionValue } from 'framer-motion';
import * as THREE from 'three';
import type { GLTF } from 'three-stdlib';
import textureEnvironmentBaked from '~/assets/images/textures/3d-experience/environment-baked.jpg';
import textureMacOS from '~/assets/images/textures/3d-experience/macos.jpg';
import textureYouTube from '~/assets/images/textures/3d-experience/youtube.jpg';
import roomModel from '~/assets/models/environments/room.glb';
import videoVScode from '~/assets/videos/misc/vs-code.mp4';

type RoomGLTFResult = GLTF & {
  nodes: Record<string, THREE.Mesh>;
  materials: Record<string, THREE.Material>;
};

type RoomProps = ThreeElements['group'] & {
  menuOpened: boolean;
  section: number;
};

export function Room(props: RoomProps) {
  const { menuOpened, section, ...rest } = props;

  const { nodes, materials } = useGLTF(roomModel) as unknown as RoomGLTFResult;
  const texture = useTexture(textureEnvironmentBaked);

  const textureStandardMaterial = new THREE.MeshStandardMaterial({
    map: texture,
    transparent: true,
    opacity: 1,
  });

  const textureGlassMaterial = new THREE.MeshStandardMaterial({
    map: texture,
    transparent: true,
    opacity: 0.2,
  });

  // Dual monitor (L) texture
  const textureDualMonitorLRef = useRef<THREE.VideoTexture | null>(null);
  const textureDualMonitorL = useVideoTexture(videoVScode);
  textureDualMonitorLRef.current = textureDualMonitorL;
  textureDualMonitorL.wrapS = THREE.RepeatWrapping; // Wrap the texture
  textureDualMonitorL.repeat.x = -1; // Flip it horizontally
  textureDualMonitorL.rotation = Math.PI / 2; // Rotate it 90 degrees
  textureDualMonitorL.center = new THREE.Vector2(0.5, 0.5); // Center the texture

  // Dual monitor (R) texture
  const textureDualMonitorR = useTexture(textureYouTube);
  textureDualMonitorR.wrapS = THREE.RepeatWrapping; // Wrap the texture
  textureDualMonitorR.repeat.x = -1; // Flip it horizontally
  textureDualMonitorR.rotation = Math.PI / 2; // Rotate it 90 degrees
  textureDualMonitorR.center = new THREE.Vector2(0.5, 0.5); // Center the texture

  // MacBook Pro Screen texture
  const textureMacBookPro = useTexture(textureMacOS);
  textureMacBookPro.flipY = false;
  textureMacBookPro.wrapS = THREE.RepeatWrapping; // Wrap the texture
  textureMacBookPro.repeat.x = 1; // Flip it horizontally
  textureMacBookPro.rotation = Math.PI / 2; // Rotate it 90 degrees
  textureMacBookPro.center = new THREE.Vector2(0.5, 0.5); // Center the texture

  const textureStandardOpacity = useMotionValue(0);
  const textureGlassOpacity = useMotionValue(0);

  texture.flipY = false;
  texture.colorSpace = THREE.SRGBColorSpace;

  useEffect(() => {
    // Animate Texture
    animate(textureStandardOpacity, section === 0 ? 1 : 0);
    animate(textureGlassOpacity, section === 0 ? 1 : 0);
  }, [section, textureStandardOpacity, textureGlassOpacity]);

  // Pause the Video inside the Dual Monitor (L) when the menu is opened
  useEffect(() => {
    const timeoutId = window.setTimeout(() => {
      const videoTexture = textureDualMonitorLRef.current;
      const videoElement = videoTexture?.source?.data as HTMLVideoElement | undefined;

      if (!videoElement) return;

      if (menuOpened) {
        videoElement.pause();
      } else {
        void videoElement.play();
      }
    }, 800);

    return () => {
      window.clearTimeout(timeoutId);
    };
  }, [menuOpened]);

  useFrame(() => {
    textureStandardMaterial.opacity = textureStandardOpacity.get();
    textureGlassMaterial.opacity = textureGlassOpacity.get();
  });

  return (
    <group name="Room" {...rest} dispose={null}>
      <group name="Walls" position={[-0.179, 0, 0.276]} rotation={[0, Math.PI / 2, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Office.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Office_1.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Office_2.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Office_3.geometry} material={textureStandardMaterial} />
      </group>
      <group position={[-0.179, 0, 0.276]} rotation={[0, 1.571, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Alexa.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Alexa_1.geometry} material={textureStandardMaterial} />
      </group>
      <group position={[-0.179, 0, 0.276]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Avengers_Tower.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Avengers_Tower_1.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Avengers_Tower_2.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Avengers_Tower_3.geometry}
          material={textureStandardMaterial}
        />
      </group>
      <group position={[-0.179, 0, 0.276]} rotation={[0.035, -Math.PI / 2, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Books.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Books_1.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Books_2.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Books_3.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Books_4.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Books_5.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Books_6.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Books_7.geometry} material={textureStandardMaterial} />
      </group>
      <group position={[-0.179, 0, 0.276]} rotation={[0, -1.361, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_Dual_Monitors_on_sit-stand_arm'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_Dual_Monitors_on_sit-stand_arm_1'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_Dual_Monitors_on_sit-stand_arm_2'].geometry}
          material={textureStandardMaterial}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Executive_Chair.geometry}
        material={textureStandardMaterial}
        position={[-0.4, 0, 0.24]}
        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Hexagon_Honeycom_Wall.geometry}
        material={textureStandardMaterial}
        position={[-0.179, 0, 0.276]}
        rotation={[-Math.PI / 2, 0, Math.PI / 2]}
      />
      <group position={[-0.179, 0, 0.276]} rotation={[-Math.PI / 2, 0, Math.PI / 2]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Houseplant.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Houseplant_1.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Houseplant_2.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Houseplant_3.geometry} material={textureStandardMaterial} />
      </group>
      <group position={[-3.85, 0.914, 1.5]} rotation={[1.627, 0, 1.78]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_iPhone.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_iPhone_1.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_iPhone_2.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_iPhone_3.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_iPhone_4.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_iPhone_5.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_iPhone_6.geometry} material={textureStandardMaterial} />
      </group>
      <group position={[-2.63, 1.46, -1.644]} rotation={[0, 1.366, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_MacBook_Pro.geometry} material={textureStandardMaterial} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_MacBook_Pro_1.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_MacBook_Pro_2.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_MacBook_Pro_3.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_MacBook_Pro_4.geometry}
          material={textureStandardMaterial}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mousepad.geometry}
        material={textureStandardMaterial}
        position={[-0.316, 0, 0.353]}
        rotation={[-Math.PI / 2, 0, 0.209]}
      />
      <group position={[-0.179, 0, 0.276]} rotation={[-1.656, 0.152, 2.083]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Nintendo_Switch.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Nintendo_Switch_1.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Nintendo_Switch_2.geometry}
          material={textureStandardMaterial}
        />
      </group>
      <group position={[-3.541, 1.443, 0.094]} rotation={[Math.PI, -Math.PI / 3, Math.PI]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Rubik_Cube.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Rubik_Cube_1.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Rubik_Cube_2.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Rubik_Cube_3.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Rubik_Cube_4.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Rubik_Cube_5.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Rubik_Cube_6.geometry} material={textureStandardMaterial} />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Shelf.geometry}
        material={textureStandardMaterial}
        position={[-0.179, 0, 0.276]}
        rotation={[-Math.PI, 0, -Math.PI]}
      />
      <group position={[-0.179, 0, 0.276]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Standing_Desk.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Standing_Desk_1.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Standing_Desk_2.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Standing_Desk_3.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Standing_Desk_4.geometry}
          material={textureStandardMaterial}
        />
      </group>
      <group position={[-0.179, 0, 0.276]} rotation={[Math.PI, -1.239, Math.PI]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_T-65_X-Wing_Starfighter'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_T-65_X-Wing_Starfighter_1'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_T-65_X-Wing_Starfighter_2'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_T-65_X-Wing_Starfighter_3'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_T-65_X-Wing_Starfighter_4'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_T-65_X-Wing_Starfighter_5'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_T-65_X-Wing_Starfighter_6'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_T-65_X-Wing_Starfighter_7'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_T-65_X-Wing_Starfighter_8'].geometry}
          material={textureStandardMaterial}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window_Blinds.geometry}
        material={textureStandardMaterial}
        position={[-0.179, 0, 0.276]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Dual_Monitor_(L)'].geometry}
        position={[-0.179, 0, 0.276]}
        rotation={[0, -1.361, 0]}
      >
        <meshBasicMaterial map={textureDualMonitorL} toneMapped={false} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Dual_Monitor_(R)'].geometry}
        position={[-0.179, 0, 0.276]}
        rotation={[0, -1.361, 0]}
      >
        <meshBasicMaterial map={textureDualMonitorR} toneMapped={false} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['MacBook_Pro_(Screen)'].geometry}
        position={[-2.796, 1.653, -1.67]}
        rotation={[0, 1.366, 0]}
      >
        <meshBasicMaterial map={textureMacBookPro} toneMapped={false} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['iPhone_(Screen)'].geometry}
        material={materials['iPhone (Screen)']}
        position={[-3.85, 0.914, 1.5]}
        rotation={[1.627, 0, 1.78]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Nintendo_Switch_(Screen)'].geometry}
        material={textureStandardMaterial}
        position={[-0.179, 0, 0.276]}
        rotation={[-1.656, 0.152, 2.083]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Iron-Man'].geometry}
        material={textureStandardMaterial}
        position={[-3.953, 1.563, 2.886]}
        rotation={[-Math.PI / 2, 0, 2.632]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Keyboard.geometry}
        material={textureStandardMaterial}
        position={[-3.298, 1.438, -0.118]}
        rotation={[-Math.PI, 1.36, -Math.PI]}
      />
      <group position={[-3.843, 1.556, 2.251]} rotation={[-3.039, 1.164, 3.055]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_Spider-Man'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_Spider-Man_1'].geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['Mesh_Spider-Man_2'].geometry}
          material={textureStandardMaterial}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Speaker_(L)'].geometry}
        material={textureStandardMaterial}
        position={[-3.273, 1.628, 0.721]}
        rotation={[0, 0.81, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Speaker_(R)'].geometry}
        material={textureStandardMaterial}
        position={[-3.69, 1.629, -1.679]}
        rotation={[0, -0.764, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Printer.geometry}
        material={textureStandardMaterial}
        position={[-3.878, 0.245, 2.02]}
      />
      <group position={[-3.86, 0.246, 3.5]} rotation={[-Math.PI, 0.786, -Math.PI]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Lamborghini_Aventador.geometry}
          material={textureStandardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_Lamborghini_Aventador_1.geometry}
          material={textureStandardMaterial}
        />
      </group>
      <group position={[-0.179, 0, 0.276]} rotation={[-Math.PI / 2, 0, Math.PI / 2]}>
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Lava_Lamp.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Lava_Lamp_1.geometry} material={textureStandardMaterial} />
        <mesh castShadow receiveShadow geometry={nodes.Mesh_Lava_Lamp_2.geometry} material={textureStandardMaterial} />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mouse.geometry}
        material={textureStandardMaterial}
        position={[-3.346, 1.413, -0.824]}
        rotation={[0, 1.38, 0]}
      />
    </group>
  );
}

useGLTF.preload(roomModel);
